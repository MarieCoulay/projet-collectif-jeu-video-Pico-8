pico-8 cartridge // http://www.pico-8.com
version 38
__lua__
-- mahin mehdi marie project --

function _init()
	create_player()
	e={x=130,y=60,life=10}
	postillons={}
	bullets={}	
	position = p.x
	create_stars()
	create_asteroids(6)
	status=0
	position_trump=0
	explosions={}
end

function _update60()
 if(status==0) update_game()
	if(status==1) update_game_over()
	if(status==2) update_victory()
end

function _draw()
	if(status==0) draw_game()
	if(status==1) draw_game_over()
	if(status==2) draw_victory()
end
-->8
--bullets

function shoot()
	new_bullet={
		x=p.x,
		y=p.y,
		speed=4,
	}
	add(bullets,new_bullet)
	sfx(0)
end


function update_bullets()
	for i in all(bullets) do
		i.x+=i.speed
		if i.x > 129 then
			del(bullets,i)
		end
	end
	for i in all(bullets) do
		if collision(e,i) then
		 del(bullets,i)
			e.life-=1
			create_explosions(i.x+8,i.y)
			if e.life==0 then
				status=2
			end
		end
	end
end

-->8
--background

function create_stars()
	stars={}
	for i=1,20 do
		new_star = {
			x = rnd(128),
			y = rnd(128),
			col = rnd({15,6,13}),
			speed = 1+rnd(1)
		}
		add(stars,new_star)
	end
		for i=1,8 do
			new_star = {
				x = rnd(128),
				y = rnd(128),
				col = 1,
				speed = 0.5+rnd(0.5)
			}
			add(stars,new_star)
		end
	end
	
function update_stars()
		for s in all(stars) do
			s.x-=s.speed
			if s.x<0 then
				s.x=128
				s.y=rnd(128)
			end
		end
	end
-->8
--asteroid
	
function create_asteroids(nombre)
	asteroids={}
		for i=1,nombre do
			new_asteroid = {
				x = rnd({168,150,162,170,180}),
				y = rnd(120),
				style = rnd({6,7,8}),
				speed = 0.5
			}
			add(asteroids,new_asteroid)
		end
	end
	

	function update_asteroids()
	for a in all(asteroids) do
		a.x-=a.speed
		if a.x<-8 then 
			del(asteroids,a)
			create_asteroids(6)
		end
	end
	for a in all(asteroids) do
		if collision(p,a) then
		 del (asteroids,a)
			p.life-=1
			sfx(5)
			if p.life==0 then
				status=1
			end
		end
	end
	end
-->8
-- map --

function draw_map()
	map(0,0,0,0,128,64)
end


-->8
-- player 
function create_player()
	p={x=20,y=60,sprite=1,life=3,h=8,w=8}
end

function draw_player()
	spr(p.sprite,p.x,p.y)
end

function player_movement()

 collide_map(p,aim,0)
 
	if (btn(➡️)) 
		and not collide_map(p,"right",0)
		and p.x<120
	then p.x+=1 
	
	elseif (btn(⬅️))
	 and not collide_map(p,"left",0)
	 and p.x>0
	then p.x-=1 
	
	elseif (btn(⬆️))
	 and not collide_map(p,"up",0)
	 and p.y>0 
	then p.y-=1 
	
	elseif (btn(⬇️))
	 and not collide_map(p,"down",0)
		and p.y<120
	then p.y+=1 
	end
	
end
-->8
-- update game

function update_game()
	-- update position player --
	position = p.x
	player_movement()
	-- bullet function --
	if (btnp(❎)) shoot()
	update_bullets()
	-- stars --
	update_stars()	
	-- asteroides --
	update_asteroids()	
	-- ennemy --
	update_enemies()	
	--shoot_enemy function
	if e.x==110 and #postillons<1
	then
	shoot_enemy()
	end
	update_postillons()
	update_explosions()	
end

-- update game over

function update_game_over()

end

function draw_game_over()
	cls()
	print("game over",45,60,7)
end

function update_victory()

end

function draw_victory()
	cls()
	print("you won !",45,60,7)
end 


-->8
-- draw game

function draw_game()
	cls()
			-- affichage etoiles --
	for s in all(stars) do
		pset(s.x,s.y,s.col)
	end
	
	draw_map()
	
		-- affichage vie player --
		for i=0,p.life-1 do
			spr(37,i*8,0)
		end
		-- affichage vie trump --
		print(e.life.."/10",108,2,7)
		-- affichage bullets --
	for i in all(bullets) do
		spr(3,i.x,i.y)
	end
		-- affichage player --
	draw_player()

		-- affichage asteroides --
	for a in all(asteroids) do
		spr(a.style,a.x,a.y)
	end
	
		-- affichage reacteurs --
	if p.x > position 
		then spr(5,p.x-8,p.y)	
	end

		-- afichage ennemi --
	spr(2,e.x,e.y)
	
		-- affichage reacteurs trump --
	spr(19,e.x,e.y+8)	
		-- affichage postillons --
	for pt in all(postillons) do
	spr(4,pt.x-8,pt.y)
	end
	
	-- affichage explosions
	draw_explosions()
	
end
-->8
-- collisions

function collision(a,b)
	if a.y+8 < b.y
	or a.y   > b.y + 8
	or a.x+8 < b.x
	or a.x   > b.x + 8 then 
		return false
	else 
		return true
	end
end


function collide_map(obj,aim,flag)
		local x=obj.x	local y=obj.y
		local w=obj.w	local h=obj.h
		
		local x1=0	local y1=0
		local x2=0	local y2=0
		
		if aim=="left" then
			x1=x-1			y1=y
			x2=x					y2=y+h-1
		
		elseif aim=="right" then
			x1=x+w			y1=y
			x2=x+w+1	y2=y+h-1
		
		elseif	aim=="up" then
			x1=x+1			y1=y-1
			x2=x+w-1	y2=y
		elseif aim=="down" then
			x1=x					y1=y+h
			x2=x+w			y2=y+h
		end
	
	
	x1/=8		y1/=8
	x2/=8		y2/=8
	
	if fget(mget(x1,y1), flag)
	or fget(mget(x1,y2), flag)
	or fget(mget(x2,y1), flag)
	or fget(mget(x2,y2), flag) then
		return true
	else
		return false
	end
	
end
-->8
--enemies

function update_enemies()
	if e.x>110 then 
		e.x-=1
	end
	if e.x==110 then
			position_trump+=1
			
			if position_trump==15 then
			e.y+=3
			end
			if position_trump==30 then
			e.y-=3
			position_trump=0
			end
	end
end

-->8
--bullets enemy

function shoot_enemy()
	new_postillon={
	x=e.x,
	y=e.y,
	speed=0.5
	}
	add(postillons,new_postillon)
	sfx(4)
end

function update_postillons()
	for pt in all(postillons) do
	pt.x-=pt.speed
		if pt.x<-10 then 
  pt.x=e.x
  pt.y=e.y
		end
	end
	for pt in all(postillons) do
		if collision(p,pt) then
		 del(postillons,pt)
			p.life-=1
			create_explosions(pt.x,pt.y)
			if p.life==0 then
				status=1
			end
		end
	end
end
-->8
--explosions
-- explosions

function create_explosions(x,y)
	sfx(6)
	add(explosions,{x=x,
																	y=y,
																 timer=0})
end

function update_explosions()
	for e in all(explosions) do
		e.timer+=1
		if e.timer==13 then
			del(explosions,e)
			end
		end
	end
	
	function draw_explosions()
		circ(x,y,rayon,couleur)
		
		for e in all(explosions) do
			circ(e.x,e.y,e.timer/2,
								8+e.timer%3)
		end
end
__gfx__
0000000006bb000009999990000000000000000008089a7000066600000000000000000000000000000000000000000000000000000000000000000000000000
000000000033333000aaaa9002c3a98000600000000000000066656000066000000566000000feee222999eeeee0000008000000000000000000000000000000
007007006b3bbb000aacacaa00000000000070008089a700065666600656660006666660000fee88882299999e88800000000000000000000000000000000000
000770000b337cbb00aaaaa000000000000000600000000065666666066666006655656600fee88888822999eeee880000000000000000000000000000000000
000770000b33ccbb00a00aa00000000006000600000000006666666006665600066566560fee88888828229eeee8800000000000000000000000000000000000
007007006b3bbb000117871100000000000000008089a700066655600066000000666660fee88888828222299e88888000000000000000000000000000000000
00000000003333300a17871a02c3a9800070000000000000006656000000000000066000feee88888828222999e8888880080000000000000000000000000000
0000000006bb000009178719000000000000000008089a70000660000000000000000000fee8e88888822229999ee88000000000000000000000000000000000
000000000000000001007001000000000000000000000800000000000000000000000000feee88882822222999eeeee800000000000000000000000000000000
000000000000000001077701007000700000000000000900000000000000000000000000fee8e888828222299eeee88880000800000000000000000000000000
00000000000000000800700800a000a00000000000000a70000000000000000000000000fee8888888282229eeee880000000000000000000000000000000000
0000000000000000070070070090009000000000000800000000000000000000000000000fee88888882229eee88888800000000000000000000000000000000
00000000000000000800000800900090000000000008000000000000000000000000000000fee88882822999e888800000000000000000000000000000000000
000000000000000007007007008000800000000000080000000000000000000000000000000fee8888229eeeee80008000000000000000000000000000000000
000000000000000000000000000000000000000000099a700000000000000000000000000000feee222999000000000000000000000000000000000000000000
00000000000000000a00700a00800080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000666666660000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000006dddddd10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000006d1111d10000000000000000000000000008080000080800000808000000000000000000000000000000000000000000000000000000000000000000
000000006d1dd6d10000000000000000000000000087888000878880008788800000000000000000000000000000000000000000000000000000000000000000
000000006d1dd6d10000000000000000000000000088888000888880008888800000000000000000000000000000000000000000000000000000000000000000
000000006d1666d10000000000000000000000000008880000088800000888000000000000000000000000000000000000000000000000000000000000000000
000000006dddddd10000000000000000000000000000800000008000000080000000000000000000000000000000000000000000000000000000000000000000
00000000111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000a070000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000099aa0000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000aa0000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000aaaa00000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000aaaaa0000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000aaaa00000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000090900000000000000000000000000000000000000000000000000
__gff__
0000010000000101010000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0000000000002100000000210000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000002100000000210000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000002100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000002100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000002100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000021000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000021000000000021000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000021000000000021000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000021000000000021000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000021000000000021000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000021000000000021000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000002100000000210000002100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
0001000039050380503705036050350503305032050300402c0402802025010210101b050120500e0500905006050040500000000000000000000000000000000000000000000000000000000000000000000000
0010000000000260502605025050220501f0501d0501b05019050190501b0501d0501f0501b0501b05016050120500b050090500f0500a0500905005050050500000000000000000000000000000000000000000
00040000000002415022150201501d1501b15016150151500f1500b15009150051500315002150011500115002150000000115001150000000000000000000000000000000000000000000000000000000000000
0010000034550345503455033550315502f5502c5502a55027550255502355021550205501d5501b5501a550155501a5501b5501d5501d5501f5502255025550285502a5502d5502f55030550315503255032550
000200000735008350083500835008350063500435000350003500f3000f3000e3000d3000b300073000530003300013000030007300023000130000300023000b30000300003000030000300003000130000300
001000000060004650026500065007600056000360002600016000060000600006000060000600006000060000600006000060000600006000060000600006000060000600006000060000600006000060000600
00010000196501d6501f65024650226501b65018650146501d60017600316003160032600336003360034600346003460002600346003460034600346003360032600316002e6002a60026600206001c60011600
__music__
00 01424344
00 41424344
00 43434344

